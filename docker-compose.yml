services:
  postgres:
    image: postgres:15
    container_name: encurtador-url-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: encurtador_url_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - encurtador_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: encurtador-url-api
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/encurtador_url_db
      SHADOW_DATABASE_URL: postgresql://postgres:postgres@postgres:5432/encurtador_url_db_shadow
      JWT_SECRET: 'a07bda8fd5e39462b4c3d860a36f6b4d'
      JWT_EXPIRE: '1d'
    networks:
      - encurtador_network
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:prod

volumes:
  postgres_data:

networks:
  encurtador_network:
    driver: bridge