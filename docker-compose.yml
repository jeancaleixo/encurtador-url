version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: encurtador-url-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - encurtador_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: encurtador-url-api
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SHADOW_DATABASE_URL: ${SHADOW_DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      BASE_URL: ${BASE_URL}
    networks:
      - encurtador_network
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:prod

volumes:
  postgres_data:

networks:
  encurtador_network:
    driver: bridge